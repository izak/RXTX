/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class javax_comm_Dispatcher */

#ifndef _Included_javax_comm_Dispatcher
#define _Included_javax_comm_Dispatcher
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: instance */
/*
 * Class:     javax_comm_Dispatcher
 * Method:    abort
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_abort
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    close
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_close
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getBaudRate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getBaudRate
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getDataBits
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getDataBits
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getFlowControlMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getFlowControlMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getInputBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getInputBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getOutputBufferFree
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getOutputBufferFree
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getOutputBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getOutputBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getParity
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getParity
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getPortType
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getPortType
  (JNIEnv *, jobject, jstring);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getStopBits
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_getStopBits
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    getValidPortInfos
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_javax_comm_Dispatcher_getValidPortInfos
  (JNIEnv *, jobject);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isBI
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isBI
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isCD
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isCD
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isCTS
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isCTS
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isDataAvailable
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isDataAvailable
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isDSR
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isDSR
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isDTR
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isDTR
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isFramingError
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isFramingError
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isOutputBufferEmpty
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isOutputBufferEmpty
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isOverrunError
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isOverrunError
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPaperOut
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPaperOut
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isParityError
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isParityError
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPortReadable
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPortReadable
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPortWritable
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPortWritable
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPrinterBusy
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPrinterBusy
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPrinterError
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPrinterError
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPrinterSelected
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPrinterSelected
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isPrinterTimedOut
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isPrinterTimedOut
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isRI
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isRI
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    isRTS
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javax_comm_Dispatcher_isRTS
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    open
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_open
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    readBytes
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_readBytes
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    restart
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_restart
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    sendBreak
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_sendBreak
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setDTR
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_setDTR
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setFlowControlMode
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_setFlowControlMode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setInputBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_setInputBufferSize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setMode
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_setMode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setOutputBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_setOutputBufferSize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setRTS
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_setRTS
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    setSerialPortParams
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_setSerialPortParams
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    suspend
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_javax_comm_Dispatcher_suspend
  (JNIEnv *, jobject, jint);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_javax_comm_Dispatcher_version
  (JNIEnv *, jobject);

/*
 * Class:     javax_comm_Dispatcher
 * Method:    writeBytes
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_javax_comm_Dispatcher_writeBytes
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
